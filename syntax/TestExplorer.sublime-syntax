%YAML 1.2
---
name: TestExplorer
scope: text.test-explorer
hidden: true

contexts:
  main:
    - include: header
    - include: test-list
    - include: no-tests-found
    - include: help

  help-key:
    - match: (?:(?:ctrl\+|super\+|alt\+|shift\+)*\w)?(?:[\w-]-)?[\w\+\-]*
      scope: string.other.test-explorer.help.key
      pop: true

  help:
    - match: '^#'
      push:
        - meta_scope: comment.test-explorer.help
        - match: ^(?!\n)\s*
          push:
            - match: '(?=[\w+]+ =)'
              set: [help-key]
            - match: (?=\[)
              set: [status-marker]
        - match: ^\n
          pop: true

  test-stats:
    - match: (failed:0)
      captures:
        1: comment.other.test-explorer.tests.failed.none
    - match: (failed:)([0-9]+)
      captures:
        1: comment.other.test-explorer.tests.failed.some
        2: constant.numeric.other.test-explorer.tests.failed
    - match: (skipped:0)
      captures:
        1: comment.other.test-explorer.tests.skipped.none
    - match: (skipped:)([0-9]+)
      captures:
        1: comment.other.test-explorer.tests.skipped.some
        2: constant.numeric.other.test-explorer.tests.skipped
    - match: (passed:0)
      captures:
        1: comment.other.test-explorer.tests.passed.none
    - match: (passed:)([0-9]+)
      captures:
        1: comment.other.test-explorer.tests.passed.some
        2: constant.numeric.other.test-explorer.tests.passed
    - match: (not-run:0)
      captures:
        1: comment.other.test-explorer.tests.not-run.none
    - match: (not-run:)([0-9]+)
      captures:
        1: comment.other.test-explorer.tests.not-run.some
        2: constant.numeric.other.test-explorer.tests.not-run
    - match: (total:)([0-9]+)
      captures:
        1: comment.other.test-explorer.tests.total
        2: constant.numeric.other.test-explorer.tests.total
    - match: (last-run:)([\w\s]+)
      captures:
        1: comment.other.test-explorer.tests.last-run
        2: string.other.test-explorer.time-delta
    - match: (last-run:)(--)
      captures:
        1: comment.other.test-explorer.tests.last-run
        2: string.other.test-explorer.time-delta
    - match: \s*\|\s*
      scope: comment.test-explorer.stats.separator

  parenthesized-test-stats:
    - match: \s*\(
      scope: comment.test-explorer.test-stats
      push:
        - include: test-stats
        - match: \)
          scope: comment.test-explorer.test-stats
          pop: true
    - match: (?=\n)
      pop: true

  header:
    - match: '^Last discovery:\s+([^\(\n]+)(\([^\)]+\))?\n'
      scope: comment.test-explorer.header.discovery
      captures:
        1: string.other.test-explorer.time-delta
        2: comment.other.test-explorer.datetime

    - match: '^Last discovery:\s+(--)\n'
      scope: comment.test-explorer.header.last-run
      captures:
        1: string.other.test-explorer.time-delta
        2: comment.other.test-explorer.datetime

    - match: '^Last run:\s+([^\(\n]+)(\([^\)]+\))?\n'
      scope: comment.test-explorer.header.last-run
      captures:
        1: string.other.test-explorer.time-delta
        2: comment.other.test-explorer.datetime

    - match: '^Last run:\s+(--)\n'
      scope: comment.test-explorer.header.last-run
      captures:
        1: string.other.test-explorer.time-delta
        2: comment.other.test-explorer.datetime

    - match: '^Tests status:'
      scope: comment.test-explorer.header.stats
      push:
        - include: test-stats
        - match: (?=\n)
          pop: true

    - match: '^Showing:\s+'
      scope: comment.test-explorer.header.showing
      push:
        - match: \[X\]\s+[\w\-]+
          scope: text.test-explorer.showing.visible
        - match: \[ \]\s+[\w\-]+
          scope: comment.test-explorer.showing.not-visible
        - match: \s*\|\s*
          scope: comment.test-explorer.stats.separator
        - match: \n
          pop: true

  status-marker:
    - match: \[X\]
      scope: string.other.test-explorer.status-marker.failed
      pop: true
    - match: \[!\]
      scope: string.other.test-explorer.status-marker.crashed
      pop: true
    - match: \[\?\]
      scope: string.other.test-explorer.status-marker.stopped
      pop: true
    - match: \[S\]
      scope: string.other.test-explorer.status-marker.skipped
      pop: true
    - match: \[\✓\]
      scope: string.other.test-explorer.status-marker.passed
      pop: true
    - match: \[\_\]
      scope: string.other.test-explorer.status-marker.not-run
      pop: true
    - match: \[R\]
      scope: string.other.test-explorer.status-marker.running
      pop: true
    - match: \[Q\]
      scope: string.other.test-explorer.status-marker.queued
      pop: true

  node:
    - match: ​(((?:.*)?/)?.*)​
      captures:
       1: meta.test-explorer.test-list.node
       2: comment.test-explorer.parent
      pop: true

  leaf:
    - match: ​(((?:.*)?/)?.*)​
      captures:
        1: meta.test-explorer.test-list.leaf
        2: comment.test-explorer.parent
      pop: true

  test-list:
    - match: '^Tests:\s*\n'
      scope: constant.other.test-explorer.header
      push:
        - meta_scope: meta.test-explorer.test-list.line
        - match: ^(?!\n)\s*
          push:
            - match: \-
              scope: punctuation.section.list.test-explorer.fold-marker
              set: [parenthesized-test-stats, node, status-marker]
            - match: (?=\[)
              set: [parenthesized-test-stats, leaf, status-marker]
        - match: ^\n
          pop: true

  no-tests-found:
    - match: ^No test.*\n
      scope: markup.inserted.test-explorer.no-tests
